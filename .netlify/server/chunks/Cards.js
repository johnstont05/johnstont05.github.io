import { c as create_ssr_component, e as each, a as escape, b as add_attribute } from "./ssr.js";
const css = {
  code: '.grid.svelte-y90x92.svelte-y90x92{display:grid;grid-template-columns:repeat(3, 1fr);gap:1rem;margin-top:50px;margin-bottom:1rem}@media(max-width: 600px){.grid.svelte-y90x92.svelte-y90x92{padding:15px;grid-template-columns:1fr}}.card.svelte-y90x92.svelte-y90x92{position:relative;border:3px solid #000000;background-color:white;padding:1rem;border-radius:8px;box-shadow:2px 2px 10px rgba(0, 0, 0, 0.1);transition:transform 0.3s ease,\n      box-shadow 0.3s ease}.card.svelte-y90x92.svelte-y90x92:hover{transform:translateY(-10px) scale(1.02);box-shadow:4px 8px 20px rgba(0, 0, 0, 0.2)}.tools-tag.svelte-y90x92.svelte-y90x92{position:absolute;top:0.75rem;right:0.75rem;background:#222;color:#fff;font-size:0.75rem;padding:0.25em 0.7em;font-weight:600;z-index:2;pointer-events:none;letter-spacing:0.03em;box-shadow:0 2px 8px rgba(0,0,0,0.08)}.description.svelte-y90x92.svelte-y90x92{font-size:15px;color:#000000;margin-top:0rem;line-height:1.3}.additional.svelte-y90x92.svelte-y90x92{font-size:13px;color:#555;margin-top:0.5rem;line-height:1.3}img.svelte-y90x92.svelte-y90x92{width:100%;aspect-ratio:16 / 9;object-fit:cover;border-radius:4px}.card.svelte-y90x92 h3.svelte-y90x92{font-size:16px;line-height:1.3;text-decoration:none;color:black;position:relative;overflow:hidden;display:inline-block;margin-bottom:0}.card.svelte-y90x92 h3.svelte-y90x92::after{content:"";position:absolute;top:0;left:-100%;width:100%;height:100%;background:linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );transform:skewX(-20deg)}.card.svelte-y90x92:hover h3.svelte-y90x92::after{animation:svelte-y90x92-shine 1s forwards}@keyframes svelte-y90x92-shine{to{left:100%}}',
  map: '{"version":3,"file":"Cards.svelte","sources":["Cards.svelte"],"sourcesContent":["<script>\\n  import { onMount } from \\"svelte\\";\\n  export let sheetName = \\"website-clips\\";\\n\\n  let items = [];\\n  export let featuredItems = [];\\n\\n  async function loadData() {\\n    const url = `https://docs.google.com/spreadsheets/d/1K-HjSLaGx8tCMtXi_H83-JDjLsNGuJ2U2-wJH4fQJnc/gviz/tq?tqx=out:csv&sheet=${sheetName}`;\\n    const response = await fetch(url);\\n    const text = await response.text();\\n\\n    const rows = text.split(\\"\\\\n\\").map((row) => row.split(\\",\\"));\\n    rows.shift(); // remove header\\n\\n    const parsed = rows.map((row) => ({\\n      title: row[0]?.replace(/&quot;/g, \\"\\").replace(/^\\"|\\"$/g, \\"\\"),\\n      description: row[1]?.replace(/&quot;/g, \\"\\").replace(/^\\"|\\"$/g, \\"\\"),\\n      url: row[2]?.replace(/&quot;/g, \\"\\").replace(/^\\"|\\"$/g, \\"\\"),\\n      image: row[3]?.replace(/&quot;/g, \\"\\").replace(/^\\"|\\"$/g, \\"\\"),\\n      type: row[4]?.replace(/&quot;/g, \\"\\").replace(/^\\"|\\"$/g, \\"\\"),\\n      additional: row[5]?.replace(/&quot;/g, \\"\\").replace(/^\\"|\\"$/g, \\"\\"),\\n      outlet: row[6]?.replace(/&quot;/g, \\"\\").replace(/^\\"|\\"$/g, \\"\\"),\\n      tools: row[7]?.replace(/&quot;/g, \\"\\").replace(/^\\"|\\"$/g, \\"\\"),\\n      date: row[8]?.replace(/&quot;/g, \\"\\").replace(/^\\"|\\"$/g, \\"\\"),\\n    }));\\n\\n    const cards = parsed.filter(\\n      (item) => item.type?.trim().toLowerCase() === \\"card\\"\\n    );\\n\\n    const lists = parsed.filter(\\n      (item) => item.type?.trim().toLowerCase() === \\"list\\"\\n    );\\n\\n    featuredItems = cards.slice(0, 9);\\n    items = lists;\\n  }\\n\\n  onMount(loadData);\\n<\/script>\\n\\n<div class=\\"grid\\">\\n  {#each featuredItems as item}\\n    <div class=\\"card\\">\\n  <span class=\\"tools-tag\\">{item.tools}</span>\\n\\n      <a href={item.url} target=\\"_blank\\">\\n        <img src={item.image} alt={item.title} />\\n        <h3>{item.title}</h3>\\n      </a>\\n        <p class=\\"description\\">{item.description}</p>\\n<p class=\\"additional\\">{@html item.additional}</p>        \\n    </div>\\n  {/each}\\n</div>\\n\\n<style>\\n  .grid {\\n    display: grid;\\n    grid-template-columns: repeat(3, 1fr);\\n    gap: 1rem;\\n    margin-top: 50px;\\n    margin-bottom: 1rem;\\n  }\\n\\n  @media (max-width: 600px) {\\n    .grid {\\n      padding: 15px;\\n      grid-template-columns: 1fr;\\n    }\\n  }\\n\\n  .card {\\n      position: relative; /* Add this line */\\n\\n    border: 3px solid #000000;\\n    background-color: white;\\n    padding: 1rem;\\n    border-radius: 8px;\\n    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);\\n    transition:\\n      transform 0.3s ease,\\n      box-shadow 0.3s ease;\\n  }\\n\\n  .card:hover {\\n    transform: translateY(-10px) scale(1.02);\\n    box-shadow: 4px 8px 20px rgba(0, 0, 0, 0.2);\\n  }\\n\\n  .tools-tag {\\n  position: absolute;\\n  top: 0.75rem;\\n  right: 0.75rem;\\n  background: #222;\\n  color: #fff;\\n  font-size: 0.75rem;\\n  padding: 0.25em 0.7em;\\n  font-weight: 600;\\n  z-index: 2;\\n  pointer-events: none;\\n  letter-spacing: 0.03em;\\n  box-shadow: 0 2px 8px rgba(0,0,0,0.08);\\n}\\n\\n  .description {\\n    font-size: 15px;\\n    color: #000000;\\n    margin-top: 0rem;\\n    line-height: 1.3;\\n  }\\n\\n  .additional {\\n    font-size: 13px;\\n    color: #555;\\n    margin-top: 0.5rem;\\n    line-height: 1.3;\\n  }\\n\\n  img {\\n    width: 100%;\\n    aspect-ratio: 16 / 9; /* Makes image rectangular */\\n    object-fit: cover;\\n    border-radius: 4px;\\n  }\\n\\n  .card h3 {\\n    font-size: 16px;\\n    line-height: 1.3;\\n    text-decoration: none;\\n    color: black;\\n    position: relative;\\n    overflow: hidden;\\n    display: inline-block;\\n    margin-bottom: 0;\\n  }\\n\\n  .card h3::after {\\n    content: \\"\\";\\n    position: absolute;\\n    top: 0;\\n    left: -100%;\\n    width: 100%;\\n    height: 100%;\\n    background: linear-gradient(\\n      120deg,\\n      transparent,\\n      rgba(255, 255, 255, 0.6),\\n      transparent\\n    );\\n    transform: skewX(-20deg);\\n  }\\n\\n  .card:hover h3::after {\\n    animation: shine 1s forwards;\\n  }\\n\\n  @keyframes shine {\\n    to {\\n      left: 100%;\\n    }\\n  }\\n</style>\\n"],"names":[],"mappings":"AA0DE,iCAAM,CACJ,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,GAAG,CAAE,IAAI,CACT,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IACjB,CAEA,MAAO,YAAY,KAAK,CAAE,CACxB,iCAAM,CACJ,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GACzB,CACF,CAEA,iCAAM,CACF,QAAQ,CAAE,QAAQ,CAEpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,gBAAgB,CAAE,KAAK,CACvB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC3C,UAAU,CACR,SAAS,CAAC,IAAI,CAAC,IAAI;AACzB,MAAM,UAAU,CAAC,IAAI,CAAC,IACpB,CAEA,iCAAK,MAAO,CACV,SAAS,CAAE,WAAW,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,CACxC,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAC5C,CAEA,sCAAW,CACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,OAAO,CACZ,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,OAAO,CAClB,OAAO,CAAE,MAAM,CAAC,KAAK,CACrB,WAAW,CAAE,GAAG,CAChB,OAAO,CAAE,CAAC,CACV,cAAc,CAAE,IAAI,CACpB,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CACvC,CAEE,wCAAa,CACX,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,GACf,CAEA,uCAAY,CACV,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,GACf,CAEA,+BAAI,CACF,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CACpB,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GACjB,CAEA,mBAAK,CAAC,gBAAG,CACP,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,eAAe,CAAE,IAAI,CACrB,KAAK,CAAE,KAAK,CACZ,QAAQ,CAAE,QAAQ,CAClB,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,YAAY,CACrB,aAAa,CAAE,CACjB,CAEA,mBAAK,CAAC,gBAAE,OAAQ,CACd,OAAO,CAAE,EAAE,CACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,KAAK,CACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE;AAChB,MAAM,MAAM;AACZ,MAAM,WAAW;AACjB,MAAM,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC9B,MAAM;AACN,KAAK,CACD,SAAS,CAAE,MAAM,MAAM,CACzB,CAEA,mBAAK,MAAM,CAAC,gBAAE,OAAQ,CACpB,SAAS,CAAE,mBAAK,CAAC,EAAE,CAAC,QACtB,CAEA,WAAW,mBAAM,CACf,EAAG,CACD,IAAI,CAAE,IACR,CACF"}'
};
const Cards = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { sheetName = "website-clips" } = $$props;
  let { featuredItems = [] } = $$props;
  if ($$props.sheetName === void 0 && $$bindings.sheetName && sheetName !== void 0) $$bindings.sheetName(sheetName);
  if ($$props.featuredItems === void 0 && $$bindings.featuredItems && featuredItems !== void 0) $$bindings.featuredItems(featuredItems);
  $$result.css.add(css);
  return `<div class="grid svelte-y90x92">${each(featuredItems, (item) => {
    return `<div class="card svelte-y90x92"><span class="tools-tag svelte-y90x92">${escape(item.tools)}</span> <a${add_attribute("href", item.url, 0)} target="_blank"><img${add_attribute("src", item.image, 0)}${add_attribute("alt", item.title, 0)} class="svelte-y90x92"> <h3 class="svelte-y90x92">${escape(item.title)}</h3></a> <p class="description svelte-y90x92">${escape(item.description)}</p> <p class="additional svelte-y90x92"><!-- HTML_TAG_START -->${item.additional}<!-- HTML_TAG_END --></p> </div>`;
  })} </div>`;
});
export {
  Cards as C
};
